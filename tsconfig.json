{
  "compilerOptions": {
    "allowJs": false,
    "allowSyntheticDefaultImports": false,
    "allowUmdGlobalAccess": false,
    /**
     * При передачи параметров, которых может не быть, в компонент возникают ошибки
     * @see https://github.com/vuejs/core/issues/6068
     */
    // "exactOptionalPropertyTypes": true,
    // "noUnusedLocals": true,
    // "noUnusedParameters": true,
    "allowUnreachableCode": false,
    "allowUnusedLabels": false,
    "alwaysStrict": true,
    "baseUrl": ".",
    /** В случае большого потребления оперативной памяти отключить */
    "disableSizeLimit": true,
    "emitDecoratorMetadata": true,
    "esModuleInterop": true,
    "experimentalDecorators": true,
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "lib": [
      "ESNext",
      "DOM"
    ],
    "module": "ESNext",
    "moduleDetection": "force",
    "moduleResolution": "Node",
    "newLine": "LF",
    "noEmit": true,
    "noErrorTruncation": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitOverride": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noImplicitUseStrict": false,
    "noPropertyAccessFromIndexSignature": true,
    "noStrictGenericChecks": false,
    "noUncheckedIndexedAccess": true,
    "paths": {
      "@/*": [
        "./src/*"
      ]
    },
    /** Не работает с `isolatedModules: true` */
    // "preserveConstEnums": false,
    /** @todo Проверить корректность работы с этим свойством. */
    "preserveValueImports": false,
    "pretty": true,
    "removeComments": true,
    "resolveJsonModule": true,
    /** @see https://github.com/vuejs/vue-next/issues/1102 */
    "skipLibCheck": true,
    "sourceMap": true,
    "strict": true,
    "strictBindCallApply": true,
    "strictFunctionTypes": true,
    "strictNullChecks": true,
    "strictPropertyInitialization": true,
    "suppressExcessPropertyErrors": false,
    "suppressImplicitAnyIndexErrors": false,
    "target": "esnext",
    "types": [
      "@types/node",
      "vite/client",
      "vue/ref-macros"
    ],
    "useDefineForClassFields": true,
    "useUnknownInCatchVariables": true
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}
